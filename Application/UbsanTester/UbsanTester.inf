## @file
#  Ubsan Tester
#
#  Copyright (c) 2024, #sasatasas. All rights reserved.<BR>
#
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution.  The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
##

[Defines]
  INF_VERSION                    = 0x00010005
  BASE_NAME                      = UbsanTester
  FILE_GUID                      = 01F2E32B-C165-4D20-8933-2F90AF691DC6

  MODULE_TYPE                    = UEFI_APPLICATION
  VERSION_STRING                 = 1.0
  ENTRY_POINT                    = UefiMain

#
#  VALID_ARCHITECTURES           = X64
#

[Sources]
  UbsanTester.h
  UbsanTester.c
  ImplicitConversionTest.c
  IntegerTest.c
  PointerTest.c
  AlignmentTest.c

[FixedPcd]
  gOpenCorePkgTokenSpaceGuid.PcdOcGuardUBSanTrapMode
  gOpenCorePkgTokenSpaceGuid.PcdOcGuardUBSanCheckGroup
  
[Packages]
  MdePkg/MdePkg.dec
  OpenCorePkg/OpenCorePkg.dec

[LibraryClasses]
  PrintLib       # BasePrintLib
  UefiLib
  DebugLib
  OcGuardLib
  UefiBootServicesTableLib
  OcConsoleControlEntryModeGenericLib
  UefiApplicationEntryPoint


[BuildOptions] 
  # CLANGDWARF:*_*_*_CC_FLAGS    = -fsanitize=undefined,nullability-arg,nullability-assign,nullability-return,unsigned-integer-overflow,implicit-conversion,local-bounds -fno-sanitize-link-runtime
  # CLANGDWARF:*_*_*_DLINK_FLAGS =  -fsanitize=undefined,nullability-arg,nullability-assign,nullability-return,unsigned-integer-overflow,implicit-conversion,local-bounds 
  # # CLANGPDB:*_*_*_CC_FLAGS      = -fsanitize=undefined,nullability-arg,nullability-assign,nullability-return,unsigned-integer-overflow,implicit-conversion,local-bounds -fno-sanitize-link-runtime
  # # CLANGPDB:*_*_*_DLINK_FLAGS   =  -fsanitize=undefined,nullability-arg,nullability-assign,nullability-return,unsigned-integer-overflow,implicit-conversion,local-bounds 
  # # XCODE5:*_*_*_CC_FLAGS        = -fsanitize=undefined,nullability-arg,nullability-assign,nullability-return,unsigned-integer-overflow,implicit-conversion,local-bounds -fno-sanitize-link-runtime
  # # XCODE5:*_*_*_DLINK_FLAGS     =  -fsanitize=undefined,nullability-arg,nullability-assign,nullability-return,unsigned-integer-overflow,implicit-conversion,local-bounds 
  # # GCC:*_*_*_CC_FLAGS           = -fsanitize=undefined -fno-stack-protector
  # # GCC:*_*_*_DLINK_FLAGS        = -fsanitize=undefined -fno-stack-protector

  *_CLANGDWARF_*_CC_FLAGS    = -fsanitize=undefined,nullability-arg,nullability-assign,nullability-return,unsigned-integer-overflow,implicit-conversion,local-bounds -fno-sanitize-link-runtime
  *_CLANGDWARF_*_DLINK_FLAGS =  -fsanitize=undefined,nullability-arg,nullability-assign,nullability-return,unsigned-integer-overflow,implicit-conversion,local-bounds
  *_CLANGPDB_*_CC_FLAGS      = -fsanitize=undefined,nullability-arg,nullability-assign,nullability-return,unsigned-integer-overflow,implicit-conversion,local-bounds -fno-sanitize-link-runtime
  *_CLANGPDB_*_DLINK_FLAGS   =  -fsanitize=undefined,nullability-arg,nullability-assign,nullability-return,unsigned-integer-overflow,implicit-conversion,local-bounds
  *_XCODE5_*_CC_FLAGS        = -fsanitize=undefined,nullability-arg,nullability-assign,nullability-return,unsigned-integer-overflow,implicit-conversion,local-bounds -fno-sanitize-link-runtime
  *_XCODE5_*_DLINK_FLAGS     =  -fsanitize=undefined,nullability-arg,nullability-assign,nullability-return,unsigned-integer-overflow,implicit-conversion,local-bounds
  *_GCC_*_CC_FLAGS           = -fsanitize=undefined
  *_GCC_*_DLINK_FLAGS        =  -fsanitize=undefined
